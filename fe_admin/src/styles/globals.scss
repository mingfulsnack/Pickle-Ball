@use './variables.scss' as *;
@use 'sass:color';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// Expose key Sass variables as CSS custom properties so legacy styles using
// var(--...) remain consistent across the app (admin and customer).
:root {
  --primary-color: #{$primary-color};
  --secondary-color: #{$secondary-color};
  --accent-color: #{$accent-color};
  --danger-color: #{$danger-color};
  --success-color: #{$success-color};
  --text-color: #{$text-color};
  --text-primary: #{$text-primary};
  --text-muted: #{$text-muted};
  --bg-primary: #{$bg-primary};
  --bg-secondary: #{$bg-secondary};
  --bg-light: #{$background-light};
  --border-color: #{$border-color};
  --primary-rgb: #{red($primary-color)}, #{green($primary-color)},
    #{blue($primary-color)};
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: $bg-secondary;
  color: $text-primary;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

// Common styles
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacing-lg;
}

.btn {
  padding: $spacing-sm $spacing-lg;
  border: none;
  border-radius: $border-radius-md;
  font-size: $font-md;
  font-weight: $font-medium;
  cursor: pointer;
  transition: all $transition-fast;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  &.btn-primary {
    background-color: $primary-color;
    color: $text-white;

    &:hover:not(:disabled) {
      background-color: $secondary-color;
    }
  }

  &.btn-secondary {
    background-color: $bg-primary;
    color: $text-primary;
    border: 1px solid $border-color;

    &:hover:not(:disabled) {
      background-color: $bg-secondary;
    }
  }

  &.btn-danger {
    background-color: $danger-color;
    color: $text-white;

    &:hover:not(:disabled) {
      background-color: color.adjust($danger-color, $lightness: -10%);
    }
  }
}

.form-group {
  margin-bottom: $spacing-lg;

  label {
    display: block;
    margin-bottom: $spacing-sm;
    font-weight: $font-medium;
    color: $text-primary;
  }

  input,
  textarea,
  select {
    width: 100%;
    padding: $spacing-sm $spacing-md;
    border: 1px solid $border-color;
    border-radius: $border-radius-md;
    font-size: $font-md;
    transition: border-color $transition-fast;

    &:focus {
      outline: none;
      border-color: $primary-color;
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    &::placeholder {
      color: $text-light;
    }
  }

  textarea {
    resize: vertical;
    min-height: 100px;
  }
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.mb-0 {
  margin-bottom: 0;
}
.mb-1 {
  margin-bottom: $spacing-xs;
}
.mb-2 {
  margin-bottom: $spacing-sm;
}
.mb-3 {
  margin-bottom: $spacing-md;
}
.mb-4 {
  margin-bottom: $spacing-lg;
}
.mb-5 {
  margin-bottom: $spacing-xl;
}

.mt-0 {
  margin-top: 0;
}
.mt-1 {
  margin-top: $spacing-xs;
}
.mt-2 {
  margin-top: $spacing-sm;
}
.mt-3 {
  margin-top: $spacing-md;
}
.mt-4 {
  margin-top: $spacing-lg;
}
.mt-5 {
  margin-top: $spacing-xl;
}

.d-flex {
  display: flex;
}

.align-items-center {
  align-items: center;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-between {
  justify-content: space-between;
}

.flex-1 {
  flex: 1;
}

// Utility classes
.shadow {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.rounded {
  border-radius: $border-radius-md;
}

.rounded-lg {
  border-radius: $border-radius-lg;
}

// Responsive helpers
@media (max-width: 768px) {
  .container {
    padding: 0 $spacing-md;
  }

  .btn {
    width: 100%;
  }
}
